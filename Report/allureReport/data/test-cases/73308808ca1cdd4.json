{
  "uid" : "73308808ca1cdd4",
  "name" : "老师端今日计划详情",
  "fullName" : "TestCase.test_06_add_plan#test_plan_today_planInfo",
  "historyId" : "26a9b6fc93cc46b1122b8bb7d7dda20c",
  "time" : {
    "start" : 1640598445154,
    "stop" : 1640598445462,
    "duration" : 308
  },
  "description" : "创建计划时的计划选择条件是接口返回的",
  "descriptionHtml" : "<p>创建计划时的计划选择条件是接口返回的</p>\n",
  "status" : "broken",
  "statusMessage" : "KeyError: 'msg'",
  "statusTrace" : "planDetail_args = {'expect': {'msg': '成功', 'title': '今日计划目标'}, 'name': '老师端今日计划详情', 'request': {'body': {'dateStr': '2021-12-24', 'planI...uthorization': 'NzRkMWU1MTMtM2UwYy00ZmJiLTk2OTEtZmRiNmIxMDJmZTZl'}, 'method': 'get', 'url': '/v1/plan/detail/dateStr'}}\n\n    @allure.feature('任务计划模块')\n    @allure.story('今日计划详情')\n    @pytest.mark.plan\n    @pytest.mark.parametrize(\"planDetail_args\", planDetail_args)\n    def test_plan_today_planInfo(planDetail_args):\n        \"\"\"创建计划时的计划选择条件是接口返回的\"\"\"\n        allure.dynamic.title(planDetail_args['name'])\n        with allure.step('发送请求'):\n            url = read_config_yaml()['appHost'] + planDetail_args['request']['url']\n            method = planDetail_args['request']['method']\n            headers = planDetail_args['request']['headers']\n            headers['Authorization'] = read_extract_yaml()['teacher_token']\n            body = planDetail_args['request']['body']\n            body['planId'] = read_extract_yaml()['plan_id']\n            body['dateStr'] = str(read_user_defined_variable()['currentDate']['date_day'])\n            lg.info(\"获取的接口请求参数：%s\" % planDetail_args)\n            allure.attach(\n                json.dumps(planDetail_args, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False),\n                name='接口请求参数')\n            res = ru.run_main(method, url, body, headers)\n            lg.info(\"返回的接口响应报文：%s\" % json.dumps(res, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False))\n            allure.attach(json.dumps(res, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False),\n                          name='接口响应报文')\n        with allure.step('断言结果'):\n>           AssertUtil().assert_body(str(res['msg']), planDetail_args['expect']['msg'])\nE           KeyError: 'msg'\n\nTestCase\\test_06_add_plan.py:191: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "del_schoolName",
    "time" : {
      "start" : 1640598427503,
      "stop" : 1640598427727,
      "duration" : 224
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "my_fixture",
    "time" : {
      "start" : 1640598445149,
      "stop" : 1640598445153,
      "duration" : 4
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "创建计划时的计划选择条件是接口返回的",
    "status" : "broken",
    "statusMessage" : "KeyError: 'msg'",
    "statusTrace" : "planDetail_args = {'expect': {'msg': '成功', 'title': '今日计划目标'}, 'name': '老师端今日计划详情', 'request': {'body': {'dateStr': '2021-12-24', 'planI...uthorization': 'NzRkMWU1MTMtM2UwYy00ZmJiLTk2OTEtZmRiNmIxMDJmZTZl'}, 'method': 'get', 'url': '/v1/plan/detail/dateStr'}}\n\n    @allure.feature('任务计划模块')\n    @allure.story('今日计划详情')\n    @pytest.mark.plan\n    @pytest.mark.parametrize(\"planDetail_args\", planDetail_args)\n    def test_plan_today_planInfo(planDetail_args):\n        \"\"\"创建计划时的计划选择条件是接口返回的\"\"\"\n        allure.dynamic.title(planDetail_args['name'])\n        with allure.step('发送请求'):\n            url = read_config_yaml()['appHost'] + planDetail_args['request']['url']\n            method = planDetail_args['request']['method']\n            headers = planDetail_args['request']['headers']\n            headers['Authorization'] = read_extract_yaml()['teacher_token']\n            body = planDetail_args['request']['body']\n            body['planId'] = read_extract_yaml()['plan_id']\n            body['dateStr'] = str(read_user_defined_variable()['currentDate']['date_day'])\n            lg.info(\"获取的接口请求参数：%s\" % planDetail_args)\n            allure.attach(\n                json.dumps(planDetail_args, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False),\n                name='接口请求参数')\n            res = ru.run_main(method, url, body, headers)\n            lg.info(\"返回的接口响应报文：%s\" % json.dumps(res, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False))\n            allure.attach(json.dumps(res, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False),\n                          name='接口响应报文')\n        with allure.step('断言结果'):\n>           AssertUtil().assert_body(str(res['msg']), planDetail_args['expect']['msg'])\nE           KeyError: 'msg'\n\nTestCase\\test_06_add_plan.py:191: KeyError",
    "steps" : [ {
      "name" : "发送请求",
      "time" : {
        "start" : 1640598445154,
        "stop" : 1640598445460,
        "duration" : 306
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "7b3bdd207e52cf6c",
        "name" : "接口请求参数",
        "source" : "7b3bdd207e52cf6c.attach",
        "type" : "text/plain",
        "size" : 414
      }, {
        "uid" : "55b4e7ad120ad9ed",
        "name" : "接口响应报文",
        "source" : "55b4e7ad120ad9ed.attach",
        "type" : "text/plain",
        "size" : 49
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 2
    }, {
      "name" : "断言结果",
      "time" : {
        "start" : 1640598445460,
        "stop" : 1640598445461,
        "duration" : 1
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'msg'\n",
      "statusTrace" : "  File \"C:\\Users\\Administrator\\Desktop\\Physical_fitness_interface\\TestCase\\test_06_add_plan.py\", line 191, in test_plan_today_planInfo\n    AssertUtil().assert_body(str(res['msg']), planDetail_args['expect']['msg'])\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2
  },
  "afterStages" : [ {
    "name" : "my_fixture::0",
    "time" : {
      "start" : 1640598445471,
      "stop" : 1640598445475,
      "duration" : 4
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "今日计划详情"
  }, {
    "name" : "feature",
    "value" : "任务计划模块"
  }, {
    "name" : "tag",
    "value" : "plan"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase"
  }, {
    "name" : "suite",
    "value" : "test_06_add_plan"
  }, {
    "name" : "host",
    "value" : "DESKTOP-08CVKRT"
  }, {
    "name" : "thread",
    "value" : "6952-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.test_06_add_plan"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "planDetail_args",
    "value" : "{'name': '老师端今日计划详情', 'request': {'method': 'get', 'url': '/v1/plan/detail/dateStr', 'headers': {'Authorization': 'None'}, 'body': {'planId': 'None', 'dateStr': '${date_day}'}}, 'expect': {'msg': '成功', 'title': '今日计划目标'}}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "plan" ]
  },
  "source" : "73308808ca1cdd4.json",
  "parameterValues" : [ "{'name': '老师端今日计划详情', 'request': {'method': 'get', 'url': '/v1/plan/detail/dateStr', 'headers': {'Authorization': 'None'}, 'body': {'planId': 'None', 'dateStr': '${date_day}'}}, 'expect': {'msg': '成功', 'title': '今日计划目标'}}" ]
}