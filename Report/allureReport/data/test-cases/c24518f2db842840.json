{
  "uid" : "c24518f2db842840",
  "name" : "学生端查询我的主页",
  "fullName" : "TestCase.test_04_join_class#test_student_home_page",
  "historyId" : "58d389983bc0c4874022763597ab0033",
  "time" : {
    "start" : 1640248499269,
    "stop" : 1640248499340,
    "duration" : 71
  },
  "description" : "查询学生用户我的主页接口，并且提取userId",
  "descriptionHtml" : "<p>查询学生用户我的主页接口，并且提取userId</p>\n",
  "status" : "broken",
  "statusMessage" : "KeyError: 'msg'",
  "statusTrace" : "homePage_args = {'expect': {'msg': '成功'}, 'name': '学生端查询我的主页', 'request': {'headers': {'Authorization': 'MzAwODk4YTAtNTdlYy00N2NlLWE0MGItOTI5NzhlMDQxYjA5'}, 'method': 'get', 'url': '/v1/user/homepage'}}\n\n    @allure.feature('学生入班申请模块')\n    # @pytest.mark.run(order=1)\n    @pytest.mark.joinClass\n    @pytest.mark.parametrize(\"homePage_args\", homePage_args)\n    def test_student_home_page(homePage_args):\n        \"\"\"查询学生用户我的主页接口，并且提取userId\"\"\"\n        allure.dynamic.story('学生端我的主页')\n        allure.dynamic.title(homePage_args['name'])\n        with allure.step('发送请求'):\n            url = read_config_yaml()['appHost'] + homePage_args['request']['url']\n            method = homePage_args['request']['method']\n            headers = homePage_args['request']['headers']\n            headers['Authorization'] = read_extract_yaml()['student_token']\n            lg.info(\"获取的接口请求参数：%s\" % homePage_args)\n            allure.attach(json.dumps(homePage_args, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False),\n                          name='接口请求参数')\n            res = ru.run_main(method, url, headers)\n            lg.info(\"返回的接口响应报文：%s\" % json.dumps(res, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False))\n            allure.attach(json.dumps(res, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False),\n                          name='接口响应参数')\n        with allure.step('断言结果'):\n>           AssertUtil().assert_body(str(res['msg']), homePage_args['expect']['msg'])\nE           KeyError: 'msg'\n\nTestCase\\test_04_join_class.py:38: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "del_schoolName",
    "time" : {
      "start" : 1640248498057,
      "stop" : 1640248498073,
      "duration" : 16
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "my_fixture",
    "time" : {
      "start" : 1640248499266,
      "stop" : 1640248499268,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "查询学生用户我的主页接口，并且提取userId",
    "status" : "broken",
    "statusMessage" : "KeyError: 'msg'",
    "statusTrace" : "homePage_args = {'expect': {'msg': '成功'}, 'name': '学生端查询我的主页', 'request': {'headers': {'Authorization': 'MzAwODk4YTAtNTdlYy00N2NlLWE0MGItOTI5NzhlMDQxYjA5'}, 'method': 'get', 'url': '/v1/user/homepage'}}\n\n    @allure.feature('学生入班申请模块')\n    # @pytest.mark.run(order=1)\n    @pytest.mark.joinClass\n    @pytest.mark.parametrize(\"homePage_args\", homePage_args)\n    def test_student_home_page(homePage_args):\n        \"\"\"查询学生用户我的主页接口，并且提取userId\"\"\"\n        allure.dynamic.story('学生端我的主页')\n        allure.dynamic.title(homePage_args['name'])\n        with allure.step('发送请求'):\n            url = read_config_yaml()['appHost'] + homePage_args['request']['url']\n            method = homePage_args['request']['method']\n            headers = homePage_args['request']['headers']\n            headers['Authorization'] = read_extract_yaml()['student_token']\n            lg.info(\"获取的接口请求参数：%s\" % homePage_args)\n            allure.attach(json.dumps(homePage_args, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False),\n                          name='接口请求参数')\n            res = ru.run_main(method, url, headers)\n            lg.info(\"返回的接口响应报文：%s\" % json.dumps(res, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False))\n            allure.attach(json.dumps(res, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False),\n                          name='接口响应参数')\n        with allure.step('断言结果'):\n>           AssertUtil().assert_body(str(res['msg']), homePage_args['expect']['msg'])\nE           KeyError: 'msg'\n\nTestCase\\test_04_join_class.py:38: KeyError",
    "steps" : [ {
      "name" : "发送请求",
      "time" : {
        "start" : 1640248499269,
        "stop" : 1640248499339,
        "duration" : 70
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "c48d4685dea8c66b",
        "name" : "接口请求参数",
        "source" : "c48d4685dea8c66b.attach",
        "type" : "text/plain",
        "size" : 280
      }, {
        "uid" : "6e84e3fee07f22f7",
        "name" : "接口响应参数",
        "source" : "6e84e3fee07f22f7.attach",
        "type" : "text/plain",
        "size" : 49
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 2
    }, {
      "name" : "断言结果",
      "time" : {
        "start" : 1640248499339,
        "stop" : 1640248499340,
        "duration" : 1
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'msg'\n",
      "statusTrace" : "  File \"C:\\Users\\Administrator\\Desktop\\Physical_fitness_interface\\TestCase\\test_04_join_class.py\", line 38, in test_student_home_page\n    AssertUtil().assert_body(str(res['msg']), homePage_args['expect']['msg'])\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2
  },
  "afterStages" : [ {
    "name" : "my_fixture::0",
    "time" : {
      "start" : 1640248499408,
      "stop" : 1640248499410,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "学生端我的主页"
  }, {
    "name" : "feature",
    "value" : "学生入班申请模块"
  }, {
    "name" : "tag",
    "value" : "joinClass"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase"
  }, {
    "name" : "suite",
    "value" : "test_04_join_class"
  }, {
    "name" : "host",
    "value" : "DESKTOP-08CVKRT"
  }, {
    "name" : "thread",
    "value" : "21680-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.test_04_join_class"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "homePage_args",
    "value" : "{'name': '学生端查询我的主页', 'request': {'method': 'get', 'url': '/v1/user/homepage', 'headers': {'Authorization': 'None'}}, 'expect': {'msg': '成功'}}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "joinClass" ]
  },
  "source" : "c24518f2db842840.json",
  "parameterValues" : [ "{'name': '学生端查询我的主页', 'request': {'method': 'get', 'url': '/v1/user/homepage', 'headers': {'Authorization': 'None'}}, 'expect': {'msg': '成功'}}" ]
}