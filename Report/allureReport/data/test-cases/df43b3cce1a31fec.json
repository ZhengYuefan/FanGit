{
  "uid" : "df43b3cce1a31fec",
  "name" : "删除班级",
  "fullName" : "TestCase.test_09_delete_school#test_delete_class",
  "historyId" : "b54b0090800c8f9c58b83ade4e1d9236",
  "time" : {
    "start" : 1640348914765,
    "stop" : 1640348914832,
    "duration" : 67
  },
  "description" : "删除班级",
  "descriptionHtml" : "<p>删除班级</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "@allure.feature('web后台删除学校模块')\n    # @pytest.mark.second_to_last\n    @pytest.mark.deleteSchool\n    def test_delete_class():\n        \"\"\"删除班级\"\"\"\n        args = args_all['deleteClasses']\n        allure.dynamic.story('删除班级')\n        allure.dynamic.title(args['name'])\n        with allure.step('发送请求'):\n            url = read_config_yaml()['webHost'] + args['request']['url']\n            method = args['request']['method']\n            headers = args['request']['headers']\n            body = args['request']['body']\n            body['classId'] = read_extract_yaml()['class_id']\n            lg.info(\"获取的接口请求参数：%s\" % args)\n            allure.attach(json.dumps(args, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False),\n                          name='接口请求参数')\n            res = ru.run_main(method, url, body, headers)\n            lg.info(json.dumps(res, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False))\n            allure.attach(json.dumps(res, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False),\n                          name='接口响应报文')\n        with allure.step('断言结果'):\n>           AssertUtil().assert_body(str(res['msg']), args['expect']['msg'])\n\nTestCase\\test_09_delete_school.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.assert_util.AssertUtil object at 0x000002139DF71820>\nbody = \"Required String parameter 'updater' is not present\"\nexpected_body = '成功'\n\n    def assert_body(self, body, expected_body):\n        \"\"\"验证返回结果内容相等\"\"\"\n        try:\n>           assert body == expected_body\nE           AssertionError\n\nCommon\\assert_util.py:21: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "del_schoolName",
    "time" : {
      "start" : 1640348902514,
      "stop" : 1640348902530,
      "duration" : 16
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "my_fixture",
    "time" : {
      "start" : 1640348914754,
      "stop" : 1640348914764,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "删除班级",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "@allure.feature('web后台删除学校模块')\n    # @pytest.mark.second_to_last\n    @pytest.mark.deleteSchool\n    def test_delete_class():\n        \"\"\"删除班级\"\"\"\n        args = args_all['deleteClasses']\n        allure.dynamic.story('删除班级')\n        allure.dynamic.title(args['name'])\n        with allure.step('发送请求'):\n            url = read_config_yaml()['webHost'] + args['request']['url']\n            method = args['request']['method']\n            headers = args['request']['headers']\n            body = args['request']['body']\n            body['classId'] = read_extract_yaml()['class_id']\n            lg.info(\"获取的接口请求参数：%s\" % args)\n            allure.attach(json.dumps(args, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False),\n                          name='接口请求参数')\n            res = ru.run_main(method, url, body, headers)\n            lg.info(json.dumps(res, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False))\n            allure.attach(json.dumps(res, sort_keys=True, indent=4, separators=(',', ';'), ensure_ascii=False),\n                          name='接口响应报文')\n        with allure.step('断言结果'):\n>           AssertUtil().assert_body(str(res['msg']), args['expect']['msg'])\n\nTestCase\\test_09_delete_school.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.assert_util.AssertUtil object at 0x000002139DF71820>\nbody = \"Required String parameter 'updater' is not present\"\nexpected_body = '成功'\n\n    def assert_body(self, body, expected_body):\n        \"\"\"验证返回结果内容相等\"\"\"\n        try:\n>           assert body == expected_body\nE           AssertionError\n\nCommon\\assert_util.py:21: AssertionError",
    "steps" : [ {
      "name" : "发送请求",
      "time" : {
        "start" : 1640348914765,
        "stop" : 1640348914821,
        "duration" : 56
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "cb9e00ffbc7edc8a",
        "name" : "接口请求参数",
        "source" : "cb9e00ffbc7edc8a.attach",
        "type" : "text/plain",
        "size" : 405
      }, {
        "uid" : "d4c26b38dabf9998",
        "name" : "接口响应报文",
        "source" : "d4c26b38dabf9998.attach",
        "type" : "text/plain",
        "size" : 130
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 2
    }, {
      "name" : "断言结果",
      "time" : {
        "start" : 1640348914821,
        "stop" : 1640348914832,
        "duration" : 11
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"C:\\Users\\Administrator\\Desktop\\Physical_fitness_interface\\TestCase\\test_09_delete_school.py\", line 41, in test_delete_class\n    AssertUtil().assert_body(str(res['msg']), args['expect']['msg'])\n  File \"C:\\Users\\Administrator\\Desktop\\Physical_fitness_interface\\Common\\assert_util.py\", line 21, in assert_body\n    assert body == expected_body\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2
  },
  "afterStages" : [ {
    "name" : "my_fixture::0",
    "time" : {
      "start" : 1640348914903,
      "stop" : 1640348914912,
      "duration" : 9
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "删除班级"
  }, {
    "name" : "feature",
    "value" : "web后台删除学校模块"
  }, {
    "name" : "tag",
    "value" : "deleteSchool"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase"
  }, {
    "name" : "suite",
    "value" : "test_09_delete_school"
  }, {
    "name" : "host",
    "value" : "DESKTOP-08CVKRT"
  }, {
    "name" : "thread",
    "value" : "7320-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.test_09_delete_school"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "deleteSchool" ]
  },
  "source" : "df43b3cce1a31fec.json",
  "parameterValues" : [ ]
}